<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
 PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
 "http://ibatis.apache.org/dtd/sql-map-2.dtd">
 <sqlMap namespace="com.dynaop.taskrole.role.entity.RoleInfo">
 	<typeAlias alias="role" type="com.dynaop.taskrole.role.entity.RoleInfo"/>
 	
 	<insert id="createRoleInfo" parameterClass="role">
 		insert into t_role_info (role_id,role_name,role_desc)
 		values(#id#,#roleName#,#roleDesc:VARCHAR:NULL#)
 	</insert> 
 	
 	<insert id="createRoleUserRel" parameterClass="java.util.HashMap">
 		insert into t_rel_user_role (id,user_id,role_id)
 		values(#id#,#userID#,#roleID#);
 	</insert>
 	
 	<select id="getRoleList" parameterClass="com.dynaop.taskrole.common.entity.QueryParamsByUserName" resultClass="role">
 		select i.role_id as id,i.role_name AS roleName ,i.role_desc as roleDesc
 		from t_role_info i
 		where i.role_val = '1'
		ORDER BY i.role_name DESC
		LIMIT #paging.startRecord#,#paging.pageSize#
 	</select>
 	<select id="getRoleList_count" parameterClass="com.dynaop.taskrole.common.entity.QueryParamsByUserName" resultClass="java.lang.Integer">
 		select count(1)
 		from t_role_info i
 		where i.role_val = '1'
		ORDER BY i.role_name DESC
 	</select>
 	
 	<!-- 标志位删除 	 -->
 	<update id="delRole" parameterClass="java.lang.String">
 		update t_role_info 
 		set role_val='0'
 		where role_id = #id#
 	</update>
 	
 	<update id="updateRole" parameterClass="role">
 		update t_role_info 
 		set role_name=#roleName#,role_desc=#roleDesc:VARCHAR:NULL#
 		where role_id = #id#
 	</update>
 	
 	<select id="getRoleAll" resultClass="role">
 		select i.role_id as id,i.role_name as roleName
 		from t_role_info i
 		where i.role_val='1'
 		order by i.role_name 
 	</select>
 	
 	<select id="getDefRoleID" resultClass="java.lang.String">
 		select states from t_property where name_en='default_role'
 	</select>
 	
 	<update id="updateDefRoleID" parameterClass="java.lang.String">
 		update t_property set states=#roleID# where name_en='default_role'
 	</update>

	<delete id="delRolePer" parameterClass="java.lang.String">
		delete from t_rel_per_role 
		where role_id = #roleID#
	</delete>

	<select id="getRolePerList" parameterClass="com.dynaop.taskrole.common.entity.QueryParamsByUserName"  resultClass="java.util.HashMap" >
		 SELECT r.ROLE_ID as roleID,r.ROLE_NAME as roleName,
		 GROUP_CONCAT(p.PER_NAME SEPARATOR ',') as perNames,   GROUP_CONCAT(p.PER_ID SEPARATOR ',') as perIDS  
		 from t_role_info r LEFT OUTER JOIN t_rel_per_role l on r.ROLE_ID=l.ROLE_ID   LEFT OUTER JOIN t_per_info p on p.PER_ID = l.PER_ID  
		 where r.ROLE_VAL = '1'   
		GROUP BY r.ROLE_ID  
		 ORDER BY r.role_name DESC 
		LIMIT #paging.startRecord#,#paging.pageSize#
	</select>
 	<select id="getRolePerList_count" parameterClass="com.dynaop.taskrole.common.entity.QueryParamsByUserName" resultClass="java.lang.Integer">
		SELECT count(1)
		from t_role_info r
		where r.ROLE_VAL = '1'
		ORDER BY r.role_name DESC
	</select>
	
	<select id="getRolePerByID" parameterClass="java.lang.String"  resultClass="java.util.HashMap" >
		SELECT r.ROLE_ID as roleID,r.ROLE_NAME as roleName,
		GROUP_CONCAT(p.PER_NAME SEPARATOR ',') as perNames,
		GROUP_CONCAT(p.PER_ID SEPARATOR ',') as perIDS
		from t_role_info r LEFT OUTER JOIN t_rel_per_role l on r.ROLE_ID=l.ROLE_ID
		LEFT OUTER JOIN t_per_info p on p.PER_ID = l.PER_ID
		where r.ROLE_VAL = '1' and r.role_id = #roleID#
		GROUP BY r.ROLE_ID
		ORDER BY r.role_name DESC 
	</select>
	
	<insert id="insertBatchRolePerRel" parameterClass="java.util.HashMap">
		insert into t_rel_per_role (rel_id,role_id,per_id) values(#relID#,#roleID#,#perID#)	
	</insert>
 </sqlMap>